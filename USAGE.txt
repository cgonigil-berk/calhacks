STEP Assembly Tolerance Analysis Tool with 3D Visualization
=============================================================

INSTALLATION:
-------------
1. Install dependencies:
   pip install -r requirements.txt

2. For system packages (Ubuntu/Debian):
   pip install --break-system-packages -r requirements.txt


BASIC USAGE:
------------
Analysis only (no visualization):
   python analyze_step.py <step_file_path>
   python analyze_step.py <step_file_path> <tolerance>

Analysis with 3D visualization:
   python analyze_step.py <step_file_path> <tolerance> --visualize
   python analyze_step.py <step_file_path> <tolerance> --visualize --no-show

Quick visualization only:
   python visualize_step.py <step_file_path> [tolerance]

Examples:
   python analyze_step.py assembly.step
   python analyze_step.py my_assembly.stp 0.05
   python analyze_step.py assembly.step 2.0 --visualize
   python analyze_step.py assembly.step 1.0 --visualize --no-show
   python visualize_step.py complex_part.step 5.0


VISUALIZATION FEATURES:
-----------------------
The visualization shows:

1. 3D Assembly View:
   - Each part rendered in different colors
   - Contact surfaces highlighted in RED
   - Red stars mark contact center points
   - Red lines connect contacting features
   - Interactive rotation (when displayed)

2. Contact Analysis Report (when contacts exist):
   - Contact types distribution (pie chart)
   - Contact distance distribution (histogram)
   - Contact area comparison (bar chart)
   - Part interaction matrix (heatmap)

Command Line Options:
   --visualize    Generate 3D visualizations
   --no-show      Save images without displaying them (for batch processing)


OUTPUT FILES:
-------------
The tool generates multiple outputs:

1. Console Report - Summary in terminal
2. <filename>_analysis.json - Detailed analysis data
3. <filename>_3d_view.png - 3D assembly visualization (if --visualize used)
4. <filename>_contact_report.png - Contact analysis charts (if contacts detected)


INTERPRETING THE 3D VISUALIZATION:
-----------------------------------
- BLUE/GREEN/YELLOW parts: Different components in the assembly
- RED surfaces: Features that are in contact with other parts
- RED STARS: Contact points (center of contact regions)
- RED LINES: Connect features that are in contact
- Rotate view: Use mouse when displayed interactively

Contact surfaces are identified based on:
- Proximity between features from different parts
- Geometric compatibility (faces, cylinders, holes)
- Distance threshold (tolerance parameter)


TOLERANCE PARAMETER:
--------------------
The tolerance parameter (default: 0.01 mm) defines the maximum distance
between features to be considered "in contact". Adjust based on your needs:

- Tight assemblies: 0.01 - 0.1 mm
- Normal assemblies: 0.1 - 1.0 mm
- Loose assemblies: 1.0 - 5.0 mm


FEATURE TYPES DETECTED:
-----------------------
- Flat Face: Planar surfaces
- Cylindrical Surface: Cylindrical features (shafts, pins)
- Hole: Circular openings


CONTACT TYPES IDENTIFIED:
--------------------------
- Clearance/Interference Fit: Hole-shaft connections (CRITICAL)
- Mating Surfaces: Face-to-face contact (IMPORTANT)
- Edge Contact: Cylinder-face contact (STANDARD)
- Line Contact: Cylinder-cylinder contact (IMPORTANT)
- Perpendicular Contact: Perpendicular surfaces (IMPORTANT)
- Surface Contact: General surface contact (STANDARD)


TOLERANCE RECOMMENDATIONS:
--------------------------
The tool provides specific tolerance recommendations based on:
- Feature types in contact
- Contact geometry
- ISO fit designations for cylindrical fits
- GD&T best practices


SAMPLE ASSEMBLY:
----------------
A sample assembly (sample_assembly.step) is provided for testing.
To analyze it:
   python analyze_step.py sample_assembly.step 2.0

To create your own sample:
   python create_sample.py


UNDERSTANDING THE OUTPUT:
-------------------------
CRITICAL priorities indicate essential fits requiring precise tolerancing
for proper assembly function (e.g., shaft-hole fits).

IMPORTANT priorities indicate geometric relationships that significantly
affect assembly quality (e.g., mating surfaces, perpendicularity).

STANDARD priorities indicate general tolerancing needs for proper
fit and alignment.


FILES:
------
Core Application:
- analyze_step.py         Main analysis script with visualization support
- visualize_step.py       Standalone quick visualization tool
- feature_analyzer.py     Feature identification module
- contact_detector.py     Contact detection module
- tolerance_evaluator.py  Tolerance evaluation module
- visualizer.py           3D visualization module
- create_sample.py        Sample assembly generator
- requirements.txt        Python dependencies

Example Outputs:
- sample_assembly_3d_view.png        Example 3D visualization
- sample_assembly_contact_report.png Example contact analysis charts
